diff --git a/Code/cmake/Modules/RDKitUtils.cmake b/Code/cmake/Modules/RDKitUtils.cmake
index 40bd8b31b..50544ef2b 100644
--- a/Code/cmake/Modules/RDKitUtils.cmake
+++ b/Code/cmake/Modules/RDKitUtils.cmake
@@ -55,17 +55,7 @@ macro(rdkit_library)
               COMPONENT ${staticLibComponent})
     endif(RDK_INSTALL_DEV_COMPONENT)
   else()
-    # we're going to always build in shared mode since we
-    # need exceptions to be (correctly) catchable across
-    # boundaries. As of now (June 2010), this doesn't work
-    # with g++ unless libraries are shared.
-    add_library(${RDKLIB_NAME} SHARED ${RDKLIB_SOURCES})
-    target_link_libraries(${RDKLIB_NAME} PUBLIC rdkit_base)
-    INSTALL(TARGETS ${RDKLIB_NAME} EXPORT ${exportName}
-            DESTINATION ${RDKit_LibDir}/${RDKLIB_DEST}
-            COMPONENT ${sharedLibComponent})
-    if(RDK_INSTALL_STATIC_LIBS)
-      add_library(${RDKLIB_NAME}_static ${RDKLIB_SOURCES})
+      add_library(${RDKLIB_NAME} STATIC ${RDKLIB_SOURCES})
 
       set(skipNext FALSE)
       foreach(linkLib ${RDKLIB_LINK_LIBRARIES})
@@ -81,12 +71,12 @@ macro(rdkit_library)
           get_target_property(linkLib_IMPORTED "${linkLib}" IMPORTED)
           if (linkLib_IMPORTED)
             # linkLib is an imported target: use it as-is
-            target_link_libraries(${RDKLIB_NAME}_static PUBLIC "${linkLib}")
+            target_link_libraries(${RDKLIB_NAME} PUBLIC "${linkLib}")
             continue()
           endif()
         elseif(EXISTS "${linkLib}")
           # linkLib is a file, so keep it as-is
-          target_link_libraries(${RDKLIB_NAME}_static PUBLIC "${linkLib}")
+          target_link_libraries(${RDKLIB_NAME} PUBLIC "${linkLib}")
           continue()
         # cmake prepends the special keywords debug, optimized, general
         # before the library name depending on whether they should be
@@ -110,18 +100,17 @@ macro(rdkit_library)
         # We haven't seen linkLib yet. This probably means it is a target
         # we will be creating at some point (if not, then we are missing a find_package).
         # Add the "_static" suffix to link against its static variant
-        target_link_libraries(${RDKLIB_NAME}_static PUBLIC "${linkLib}_static")
+        target_link_libraries(${RDKLIB_NAME} PUBLIC "${linkLib}")
       endforeach()
-      target_link_libraries(${RDKLIB_NAME}_static PUBLIC rdkit_base)
+      target_link_libraries(${RDKLIB_NAME} PUBLIC rdkit_base)
       if(RDK_INSTALL_DEV_COMPONENT)
-        INSTALL(TARGETS ${RDKLIB_NAME}_static EXPORT ${exportName}
+        INSTALL(TARGETS ${RDKLIB_NAME} EXPORT ${exportName}
                 DESTINATION ${RDKit_LibDir}/${RDKLIB_DEST}
                 COMPONENT ${staticLibComponent})
       endif(RDK_INSTALL_DEV_COMPONENT)
-      set_target_properties(${RDKLIB_NAME}_static PROPERTIES
-                            OUTPUT_NAME "RDKit${RDKLIB_NAME}_static")
+      set_target_properties(${RDKLIB_NAME} PROPERTIES
+                            OUTPUT_NAME "RDKit${RDKLIB_NAME}")
 
-    endif(RDK_INSTALL_STATIC_LIBS)
   endif()
   IF(RDKLIB_LINK_LIBRARIES)
     target_link_libraries(${RDKLIB_NAME} PUBLIC ${RDKLIB_LINK_LIBRARIES})
